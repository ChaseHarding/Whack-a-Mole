body {
    display: flex;
    align-items: center;
    justify-content: center;
    /* set direction to column so the div appear above eachother, took me a minute to remember this */
    flex-direction: column;
    height: 100vh;
    margin: 0;
    background-color: lightblue;
}

.title {
   font-size: 25px;
   margin-bottom: 20px;
   /* attempting to animate the title */
   animation: titleAnimation 2s infinite alternate;
}

.gameOverTitle {
    display: none; 
    font-size: 25px;
    margin-bottom: 20px;
    /* my first idea is to set a second title to display none and use js to make it visible in the settimeout function that ends the game */
    /* alternatively we could add a 2nd html page and style it and have the code open that new page instead. */
    animation: title2Animation 2s infinite alternate;
    /* i like this simple animation, but should explore alternatives */
}

/* have to rethink this  */
/* #gameOverMessage {
    
    text-align: center;
}

#finalScore {
    font-size: 20px;
    margin-bottom: 10px;
}

#restartButton {
    font-size: 16px;
    padding: 8px 16px;
    cursor: pointer;
} */

.score {
   
    text-align: center;
    font-size: 20px;
    margin-top: 20px;
}




.game-container {
    display: flex;
    flex-wrap: wrap;
}

.hole {
    width: 100px;
    height: 100px;
    background-color: brown;
    border-radius: 25px;
    margin: 20px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    overflow: hidden;

}

.hole img {
    width: 100%;
    height: auto;
    position: absolute;
    top: 0;
    left: 0;
    display: none;
}


/* i dont know why, but i thought the keyframes had to go at the bottom of CSS. It does not. However, I like the organization of keeping them at the bottom */
/* My Title Animation */
@keyframes titleAnimation {
    from {
        transform: scale(1); 
    }
    to {
        transform: scale(1.2);
    }
}

/* My Game Over animation */
@keyframes title2Animation {
    from {
        transform: scale(1);
    }
    to {
        transform: scale(1.2);
    }
}